name: PR Review Process

on:
  pull_request:
    types:
      - ready_for_review
      - review_requested

env:
  ORGANIZATION: homenoc
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.TAT_APP_ID }}
          private-key: ${{ secrets.TAT_PRIVATE_KEY }}

      - name: Authenticate GH CLI
        run: echo "${{ steps.generate-token.outputs.token }}" | gh auth login --with-token

      - name: Get Author
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          echo "REVIEW_REQUESTS=$(gh pr view $PR_NUMBER --json reviewRequests --jq '.reviewRequests[].login')" >> $GITHUB_ENV

      - name: Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.TAT_SLACK_WEBHOOK_URL }}
        run: |
          if echo "$REVIEW_REQUESTS"; then
            REVIEW_REQUESTS=$(echo -e "$REVIEW_REQUESTS" | sed 's/^/<@/;s/$/>/')
            JSON_PAYLOAD=$(jq -n --arg reviewers "$REVIEW_REQUESTS" --arg pr_url "${{ github.event.pull_request.html_url }}" --arg pr_number "$PR_NUMBER" \
            '{
              "text": "[PR] Review Request\n\($reviewers)\n\nPR URL: \($pr_url)\nPR #: \($pr_number)"
            }')
          else
            JSON_PAYLOAD=$(jq -n --arg --arg pr_url "${{ github.event.pull_request.html_url }}" --arg pr_number "$PR_NUMBER" \
            '{
              "text": "[PR] Review Request\n誰かレビューよろぴく\n\nPR URL: \($pr_url)\nPR #: \($pr_number)"
            }')
          fi
          curl -X POST -H 'Content-type: application/json' --data "$JSON_PAYLOAD" $SLACK_WEBHOOK_URL
