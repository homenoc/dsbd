# Generated by Django 5.1.1 on 2024-09-14 20:33

import django.db.models.deletion
import django.utils.timezone
import dsbd.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('custom_auth', '0007_historicalgroup_historicaluser_historicalusergroup'),
        ('router', '0003_historicaltunnelip_historicaltunnelrouter'),
        ('service', '0002_remove_connection_ipv4_comment_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalConnection',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新日')),
                ('connection_type', models.CharField(choices=[('EIP', 'EtherIP Tunnel'), ('GRE', 'GRE Tunnel'), ('IPT', 'IPT Tunnel'), ('CC0', 'Cross Connect'), ('ETC', 'ETC')], default='EIP', max_length=255, verbose_name='接続タイプ')),
                ('connection_number', models.IntegerField(default=1, verbose_name='接続番号')),
                ('connection_comment', models.CharField(blank=True, default='', max_length=255, verbose_name='接続情報コメント')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('is_open', models.BooleanField(default=False, verbose_name='開通')),
                ('hope_location', models.CharField(choices=[('east_japan', '東日本'), ('west_japan', '西日本'), ('anywhere', 'どちらでも')], default='anywhere', max_length=255, verbose_name='接続希望場所')),
                ('term_location', models.CharField(blank=True, default='', max_length=255, verbose_name='接続終端場所')),
                ('ntt_type', models.CharField(choices=[('type-1', 'はい（IPoEによりIPv6インターネットへ接続可能）'), ('type-2', 'はい（IPoEによりIPv6インターネットへ接続不可）'), ('type-3', 'はい（フレッツv6オプションの契約なし）'), ('type-4', 'いいえ（フレッツ以外でインターネットに接続可能）'), ('type-5', 'いいえ（IPv6でのインターネット接続不可）'), ('etc', 'etc')], default='type-1', max_length=255, verbose_name='NTT接続タイプ')),
                ('ntt_comment', models.CharField(blank=True, default='', max_length=255, verbose_name='NTT接続コメント')),
                ('ipv4_route', models.CharField(choices=[('none', 'None'), ('full_route', 'Full Route'), ('default_route', 'Default Route'), ('full_route', 'Etc')], default='full_route', max_length=255, verbose_name='IPv4 Route')),
                ('ipv4_route_comment', models.CharField(blank=True, default='', max_length=255, verbose_name='IPv4 Routeコメント')),
                ('ipv6_route', models.CharField(choices=[('none', 'None'), ('full_route', 'Full Route'), ('default_route', 'Default Route'), ('full_route', 'Etc')], default='full_route', max_length=255, verbose_name='IPv6 Route')),
                ('ipv6_route_comment', models.CharField(blank=True, default='', max_length=255, verbose_name='IPv6 Routeコメント')),
                ('is_monitor', models.BooleanField(default=False, verbose_name='監視の有無')),
                ('link_v4_our', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPv4接続(HomeNOC側)')),
                ('link_v4_your', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPv4(貴団体側)')),
                ('link_v6_our', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPv6接続(HomeNOC側)')),
                ('link_v6_your', models.GenericIPAddressField(blank=True, null=True, verbose_name='IPv6(貴団体側)')),
                ('term_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='終端先IP')),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='開通日')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='解約日')),
                ('user_comment', dsbd.models.MediumTextField(blank=True, default='', verbose_name='ユーザコメント')),
                ('admin_comment', dsbd.models.MediumTextField(blank=True, default='', verbose_name='管理者コメント')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='service.service')),
                ('tunnel_ip', models.ForeignKey(blank=True, db_constraint=False, max_length=255, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='router.tunnelip')),
            ],
            options={
                'verbose_name': 'historical Connection',
                'verbose_name_plural': 'historical Connections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalService',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新日')),
                ('service_type', models.CharField(choices=[('2000', 'L2'), ('3S00', 'L3 Static'), ('3B00', 'L3 BGP'), ('IP3B', 'トランジット提供'), ('CL20', 'コロケーションサービス(L2)'), ('CL3S', 'コロケーションサービス(L3 Static)'), ('CL3B', 'コロケーションサービス(L3 BGP)'), ('ET00', 'その他')], default='CL3B', max_length=255, verbose_name='サービスタイプ')),
                ('service_number', models.IntegerField(default=1, verbose_name='サービス番号')),
                ('service_comment', models.CharField(blank=True, default='', max_length=255, verbose_name='サービス情報コメント')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('is_pass', models.BooleanField(default=False, verbose_name='審査OK')),
                ('allow_connection_add', models.BooleanField(default=True, verbose_name='接続追加許可')),
                ('asn', models.IntegerField(blank=True, default=0, null=True, verbose_name='ASN')),
                ('ave_upstream', models.IntegerField(default=10, verbose_name='平均アップロード帯域幅')),
                ('max_upstream', models.IntegerField(default=20, verbose_name='最大アップロード帯域幅')),
                ('ave_downstream', models.IntegerField(default=10, verbose_name='平均ダウンロード帯域幅')),
                ('max_downstream', models.IntegerField(default=20, verbose_name='最大ダウンロード帯域幅')),
                ('max_bandwidth_as', models.CharField(blank=True, default='', max_length=255, verbose_name='最大帯域幅AS')),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='開通日')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='解約日')),
                ('user_comment', dsbd.models.MediumTextField(blank=True, default='', verbose_name='ユーザコメント')),
                ('admin_comment', dsbd.models.MediumTextField(blank=True, default='', verbose_name='管理者コメント')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='custom_auth.group')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Service',
                'verbose_name_plural': 'historical Services',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
