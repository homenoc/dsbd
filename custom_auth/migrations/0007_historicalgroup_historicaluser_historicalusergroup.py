# Generated by Django 5.1.1 on 2024-09-14 20:33

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import dsbd.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('custom_auth', '0006_group_allow_jpnic_add'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalGroup',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新日')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='name')),
                ('name_jp', models.CharField(db_index=True, max_length=150, verbose_name='name(japanese)')),
                ('comment', models.CharField(blank=True, default='', max_length=250, verbose_name='comment')),
                ('status', models.IntegerField(choices=[(1, '有効'), (10, 'ユーザより廃止'), (11, '運営委員より廃止'), (12, '審査落ち')], default=1, verbose_name='ステータス')),
                ('allow_service_add', models.BooleanField(default=False, verbose_name='サービス追加許可')),
                ('allow_jpnic_add', models.BooleanField(default=False, verbose_name='JPNIC情報追加許可')),
                ('membership_type', models.IntegerField(choices=[(1, '一般会員'), (40, '運営委員(優勝)'), (70, '学生委員'), (90, '運営委員(無償)'), (99, 'その他')], default=1, verbose_name='会員種別')),
                ('membership_expired_at', models.DateTimeField(blank=True, null=True, verbose_name='有効期限')),
                ('agree', models.BooleanField(default=False, verbose_name='規約確認済み')),
                ('question', dsbd.models.MediumTextField(default='', verbose_name='質問内容')),
                ('is_pass', models.BooleanField(default=False, verbose_name='審査OK')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Stripe(CusID)')),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Stripe(SubID)')),
                ('postcode', models.CharField(default='', max_length=20, verbose_name='郵便番号')),
                ('address', models.CharField(default='', max_length=250, verbose_name='住所')),
                ('address_jp', models.CharField(default='', max_length=250, verbose_name='住所(Japanese)')),
                ('phone', models.CharField(default='', max_length=30, verbose_name='phone')),
                ('country', models.CharField(default='Japan', max_length=100, verbose_name='居住国')),
                ('contract_type', models.CharField(choices=[('E-Mail', 'E-Mail'), ('AirMail', 'AirMail)')], default='E-Mail', max_length=100, verbose_name='契約種別')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical グループ',
                'verbose_name_plural': 'historical グループ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新日')),
                ('display_name', models.CharField(blank=True, default='', max_length=150, verbose_name='display_name')),
                ('username', models.CharField(db_index=True, max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('username_jp', models.CharField(db_index=True, max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username(japanese)')),
                ('email', models.EmailField(db_index=True, max_length=254, verbose_name='email')),
                ('is_staff', models.BooleanField(default=False, verbose_name='管理者ステータス')),
                ('is_active', models.BooleanField(default=False, verbose_name='有効')),
                ('allow_group_add', models.BooleanField(default=True, verbose_name='グループ追加許可')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ユーザ',
                'verbose_name_plural': 'historical ユーザ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserGroup',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新日')),
                ('is_admin', models.BooleanField(default=False, verbose_name='管理者')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='custom_auth.group')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ユーザ・グループ',
                'verbose_name_plural': 'historical ユーザ・グループ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
